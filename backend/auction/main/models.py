from django.db import models
import datetime
from django.core.validators import MinValueValidator
# from django.contrib.postgres.fields import ArrayField
# from django.conf import settings
from authapp.models import User

# CASCADE: deletes all objects that reference the deleted object.
# PROTECT: prevents deletion of the referenced object.
# SET_NULL: sets the foreign key value to NULL.
# SET_DEFAULT: sets the foreign key value to its default value.
# DO_NOTHING: does nothing when the referenced object is deleted.


# lets us explicitly set upload path and filename


def upload_to(instance, filename):
    return 'images/{filename}'.format(filename=filename)

# class Description(models.Model):
#     description_brand = models.CharField(max_length = 255, blank = False)
#     description_model_number = models.CharField(max_length = 255)
#     description_date_of_purchase = models.DateTimeField()
#     description_location = models.CharField(max_length = 255)
    # description_additional_accessories = ArrayField(models.CharField(max_length=255), blank=True)
    # description_additional_info = ArrayField(models.CharField(max_length=255), blank=True)


class AuctionModel(models.Model):

    # id -> autogenerated

    # blank=False, so the field is required

    name = models.CharField(max_length=255, blank=False)
    auction_date = models.DateField(
        validators=[MinValueValidator(datetime.date.today)], blank=False)
    description = models.TextField()
    # description = models.OneToOneField(Description, blank = False, on_delete = PROTECT)
    # description = models.OneToOneField(Description, models.SET_NULL, blank = True, null = True ) # nullable ForeignKey -> set null when the referenced object is deleted
    base_price = models.IntegerField(blank=False)

    # tags = ArrayField(models.CharField(max_length=200), blank=True) # ArrayField only available in PostgreSQL

    description_brand = models.CharField(max_length=255, blank=False)
    description_model_number = models.CharField(max_length=255)
    description_date_of_purchase = models.DateTimeField()
    description_location = models.CharField(max_length=255)

    # description_additional_accessories = ArrayField(models.CharField(max_length=255), blank=True)

    # description_additional_info = ArrayField(models.CharField(max_length=255), blank=True)

    followers = models.ManyToManyField(
        User, related_name="followers", default=None, blank=True,)

    owner = models.ForeignKey(
        # settings.AUTH_USER_MODEL, # check this also
        User, on_delete=models.CASCADE)
    # auto_now_add -> inherit editable=False -> will not show up in the admin panel
    date_published = models.DateTimeField(auto_now_add=True, editable=False)
    date_modified = models.DateTimeField(auto_now=True)

    # images - multiple later, single for now
    # image_url = models.ImageField(upload_to=upload_to, blank=True, null=True)

    # favourites = models.ManyToManyField(User, related_name="favourite", default=None, blank = True) # added in Users field

    # has_sold = models.BooleanField( null=True, blank=True)

    def __str__(self):
        return self.name


class QuestionModel(models.Model):
    question_owner = models.ForeignKey(User, on_delete=models.CASCADE)
    belongs_to_auction = models.ForeignKey(
        AuctionModel, on_delete=models.CASCADE)
    title = models.CharField(max_length=255, blank=False, null=False)
    created_at = models.DateTimeField(auto_now_add=True, editable=False)


class AnswerModel(models.Model):
    answer_owner = models.ForeignKey(User, on_delete=models.CASCADE)
    belongs_to_question = models.ForeignKey(
        QuestionModel, on_delete=models.CASCADE)
    title = models.CharField(max_length=255, blank=False, null=False)
    created_at = models.DateTimeField(auto_now_add=True, editable=False)
    parent_answer = models.ForeignKey(
        "self", on_delete=models.CASCADE, null=True, blank=True)
    # parent_answer = models.ForeignKey("AnswerModel", on_delete = models.CASCADE, null = True, blank = True) Both ways are acceptable


class BidModel(models.Model):
    belongs_to_auction = models.ForeignKey(
        AuctionModel, on_delete=models.CASCADE)
    # curr_price = models.DecimalField(max_digits=10, decimal_places=2)
    curr_price = models.IntegerField(blank=False)
    curr_bidder = models.ForeignKey(User, on_delete=models.CASCADE)
    bid_time = models.DateTimeField(auto_now=True)
